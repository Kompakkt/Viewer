:host {
  --background-color: rgba(255, 255, 255, 0.1);
  --border-color: rgba(255, 255, 255, 0.2);
}

@mixin box-checked {
  border-color: var(--color-primary);
  background: var(--color-primary);
}

@mixin box-unchecked {
  border-color: var(--border-color);
  background: var(--background-color);
}

input[type='checkbox'] {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  width: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
}

label {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 8px;
}

svg {
  display: inline-block;
  height: 1em;
  width: 1em;
  border-width: 2px;
  border-style: solid;
  border-radius: 4px;
  @include box-unchecked();
}

.checkmark {
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  stroke-width: 8;
  stroke: #fff;
  fill: none;
}
input:checked + svg {
  @include box-checked();
  animation: boxChecked 0.2s ease forwards;
  .checkmark {
    animation: checkmarkChecked 0.2s 0.1s ease forwards;
  }
}
input:not(:checked) + svg {
  animation: boxUnchecked 0.2s ease;
  .checkmark {
    animation: checkmarkUnchecked 0.2s ease;
  }
}
@keyframes boxChecked {
  from {
    @include box-unchecked();
  }
  to {
    @include box-checked();
  }
}

@keyframes checkmarkChecked {
  from {
    stroke-dashoffset: 100;
  }
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes boxUnchecked {
  from {
    @include box-checked();
  }
  to {
    @include box-unchecked();
  }
}

@keyframes checkmarkUnchecked {
  from {
    stroke-dashoffset: 0;
  }
  to {
    stroke-dashoffset: 100;
  }
}
